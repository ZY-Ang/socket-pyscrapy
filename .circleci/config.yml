# Check https://circleci.com/docs/2.0/ for more details
#
version: 2.1

defaults: &config_project_defaults
  working_directory: ~/repo

executors:
  node_default:
    docker:
      - image: circleci/node:lts

jobs:
  # Deploy stuff to firebase functions
  deploy_functions:
    <<: *config_project_defaults
    executor: node_default
    steps:
      - checkout
      # Download and cache dependencies
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "~/repo/functions/functions/package.json" }}
            # fallback to using the latest cache if no exact match is found
            - v1-dependencies-
      - run:
          working_directory: ~/repo/functions/functions
          name: npm install
          command: npm install
      - save_cache:
          paths:
            - ~/repo/functions/functions/node_modules
          key: v1-dependencies-{{ checksum "~/repo/functions/functions/package.json" }}
      - run:
          working_directory: ~/repo/functions
          name: Publish to firebase
          command: ./functions/node_modules/.bin/firebase deploy --token=$FIREBASE_TOKEN --only functions

  # Deploy stuff to the scraping server
  deploy_ssh:
    <<: *config_project_defaults
    executor: node_default
    steps:
      - checkout
      - run:
          name: Create ssh key file
          command: echo $PYSCRAPY_WS_KEY | base64 -d > ~/pyscrapy-ws-key.pem
      - run:
          name: Set ssh key file permissions
          working_directory: ~/
          command: chmod 400 pyscrapy-ws-key.pem
      - run:
          name: Install Pip3
          command: |
            ssh -o StrictHostKeyChecking=no -i "~/pyscrapy-ws-key.pem" ubuntu@$SSH_HOST 'sudo apt update && sudo apt -y install python3-pip'
      - run:
          name: Create firebase admin private key json credentials
          command: echo $FIREBASE_ADMIN_JSON_KEY | base64 -d > ~/repo/firebase-adminsdk.json
      - run:
          name: killall processes belonging to ubuntu - stop previous scraper, if any
          command: |
            ssh -o StrictHostKeyChecking=no -i "~/pyscrapy-ws-key.pem" ubuntu@$SSH_HOST 'sudo killall -u ubuntu' || true
      - run:
          name: Delete all files
          command: |
            ssh -o StrictHostKeyChecking=no -i "~/pyscrapy-ws-key.pem" ubuntu@$SSH_HOST 'rm -rf ./* && ls -aL'
      - run:
          name: Send Files to Server
          command: |
            scp -r -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null -i "~/pyscrapy-ws-key.pem" ~/repo/* ubuntu@$SSH_HOST:/home/ubuntu/ || true
      - run:
          name: Install
          command: |
            ssh -o StrictHostKeyChecking=no -i "~/pyscrapy-ws-key.pem" ubuntu@$SSH_HOST '(pip3 install -r requirements.txt' || true
      - run:
          name: Start and exit
          command: |
            ssh -o StrictHostKeyChecking=no -i "~/pyscrapy-ws-key.pem" ubuntu@$SSH_HOST '(GOOGLE_APPLICATION_CREDENTIALS=/home/ubuntu/firebase-adminsdk.json FIREBASE_DATABASE_URL=https://socket-pyscrapy.firebaseio.com nohup python3 __main__.py > logs.out 2> errors.out) &' || true

workflows:
  version: 2
  master_flow:
    jobs:
      - deploy_ssh
      - deploy_functions
